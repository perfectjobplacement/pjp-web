var globalObj={categoryArray:[{key:"1",name:"Post Graduation"},{key:"2",name:"Under Graduates"},{key:"3",name:"BE"},{key:"4",name:"DIPLOMA"},{key:"5",name:"ITI"},{key:"6",name:"Other"}],requiredDocuments:["Any Id Proof","Adhar Card","Pan Card","Driving Licence","Voter Id","Passport Size Photo (2)"],categoryObject:{1:"Post Graduation",2:"Under Graduates",3:"BE / ME",4:"DIPLOMA",5:"ITI",6:"Other"},candidateMinExp:{1:"Fresher",2:"6 Month To 1 Year",3:"1 To 2 Year",4:"3 To 5 Year",5:"5 Year +"},candidateGenderType:{1:"Male",2:"Female",3:"Both"},whPerDay:{1:"4 Hours",2:"6 Hours",3:"8 Hours",4:"10 Hours",5:"12 Hours"},jobCategory:{1:"Industrial",2:"Computer",3:"Account",4:"Sales & Marcketing",5:"Back Office",6:"Others"},jobWorkType:{1:"Full Time",2:"Part Time",3:"Both"},dpFormat:"dd-MM-yyyy",multiSelect:function(array,key){-1==array.indexOf(key)?array.push(key):array.splice(array.indexOf(key),1)}},getUnsupportedFileExtension=function(){return["php","js","css","asp","rb","htaccess","htpasswd","html"]};function sortByKey(array,key){return array.sort(function(a,b){var x=a[key],y=b[key];return x<y?-1:y<x?1:0})}var convertToBR=function(value){return value&&"string"==typeof value?value.replace(/\n/g,"<br />"):""},trackVisitor=function(){try{$.ajax({type:"POST",url:window.location.origin+"/api/site/user-visitor",data:{user_id:""}}).done(function(msg){})}catch(err){console.log("err >>>>",err)}};trackVisitor();var getUID=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0;return("x"==c?r:3&r|8).toString(16)})},checkUserIsLoggedOrNot=function($q,$timeout,$http,$location,$rootScope,$state,status){var deferred=$q.defer();return $http.get("/users/me").success(function(user){user&&user._id?($rootScope.g.loggedUser=user,$timeout(deferred.resolve)):$state.go("home")}).error(function(){$timeout(deferred.resolve)}),deferred.promise},justCheckLogin=function($q,$timeout,$http,$location,$rootScope,$state,status){$http.get("/users/me").success(function(user){user&&user._id&&($rootScope.g.loggedUser=user)})},checkLoggedIn=function($q,$timeout,$http,$location,$rootScope,$state){return checkUserIsLoggedOrNot($q,$timeout,$http,$location,$rootScope,$state,!0)};checkLoggedIn.$inject=["$q","$timeout","$http","$location","$rootScope","$state"];var checkLoggedOut=function($q,$timeout,$http,$location,$rootScope,$state){return checkUserIsLoggedOrNot($q,$timeout,$http,$location,$rootScope,$state,!1)},_justCheckLogin=function($q,$timeout,$http,$location,$rootScope,$state){return justCheckLogin($q,$timeout,$http,$location,$rootScope,$state,!1)};_justCheckLogin.$inject=["$q","$timeout","$http","$location","$rootScope","$state"];var appModule=angular.module("tm",["ngRoute","ngCookies","ngResource","ui.bootstrap","ui.router","toastr","ngAnimate"]);appModule.run(["$rootScope","$timeout","$location","icdb","$http","alertService",function($rootScope,$timeout,$location,icdb,$http,alertService){$rootScope.g={},$rootScope.g.adminData={},$rootScope.g.adminData=globalObj,$rootScope.g.infoText={},$rootScope.$on("$stateChangeSuccess",function(event,next,current){$("html, body").animate({scrollTop:0},"slow")}),$rootScope.g.getActiveClass=function(key){if($location.path()==key)return"active"},$rootScope.g.postResume={},$rootScope.g.postResume.isSubmited=!1,$rootScope.g.postResume.model={},$rootScope.g.postResume.openModal=function(){$rootScope.g.postResume.model={},angular.element("input[type='file']").val(null),$("#upload-resume").modal("show"),$rootScope.g.postResume.submit=function(form){form.$valid?$rootScope.g.postResume.model.resume&&$http.post("/api/v1/post/resume",$rootScope.g.postResume.model).success(function(response){$("#upload-resume").modal("hide"),alertService.flash("success","Your resume has been sent successfully.")}):$rootScope.g.postResume.isSubmited=!0}},$rootScope.g.siteContent={},$rootScope.g.siteContent.init=function(){icdb.get("AppConfig",function(response){$rootScope.g.siteContent.data={},$rootScope.g.siteContent.data=response[0]})},$rootScope.g.siteContent.init()}]),appModule.directive("fileread",[function(){return{scope:{fileread:"="},link:function(scope,element,attributes){element.bind("change",function(changeEvent){var reader=new FileReader;reader.onload=function(loadEvent){scope.$apply(function(){scope.fileread=loadEvent.target.result})},reader.readAsDataURL(changeEvent.target.files[0])})}}}]),appModule.directive("numbersOnly",function(){return{require:"ngModel",link:function(scope,element,attr,ngModelCtrl){ngModelCtrl.$parsers.push(function(text){if(text){var transformedInput=text.replace(/[^0-9]/g,"");return transformedInput!==text&&(ngModelCtrl.$setViewValue(transformedInput),ngModelCtrl.$render()),transformedInput}})}}}),appModule.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode({enabled:!1,requireBase:!0}).hashPrefix("!"),$stateProvider.state("login",{url:"/login",templateUrl:"/angular/views/users/login.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("signup",{url:"/signup",templateUrl:"/angular/views/users/signup.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("forgot-password",{url:"/forgot-password",templateUrl:"/angular/views/users/forgot-password.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("home",{url:"/home",templateUrl:"/angular/views/index.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("aboutus",{url:"/aboutus",templateUrl:"/angular/views/about-us.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("category",{url:"/category/:key/:categoryId",templateUrl:"/angular/views/job-search.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("contact",{url:"/contact",templateUrl:"/angular/views/contact.html",resolve:{loggedin:_justCheckLogin}}),$stateProvider.state("user-dashboard",{url:"/user-dashboard",templateUrl:"/angular/views/users/user-dashboard.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("user-register",{url:"/user-register",templateUrl:"/angular/views/candidate-register.html"}),$urlRouterProvider.otherwise("/home")}]),angular.module("tm").config(["toastrConfig",function(toastrConfig){angular.extend(toastrConfig,{autoDismiss:!1,containerId:"toast-container",maxOpened:0,newestOnTop:!0,positionClass:"toast-bottom-full-width",preventDuplicates:!1,preventOpenDuplicates:!1,target:"body"})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,["tm"]),setTimeout(function(){$("#front-spinner-bx").hide(),$(".body-main-cn").show()},500)}),appModule.controller("CommonController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.comnObj={},$(window).width()<768&&$("#nav-menu-container").length&&$("body").on("click","#close-sidebar-on-click",function(e){$("body").toggleClass("mobile-nav-active"),$("#mobile-nav-toggle i").toggleClass("lnr-cross lnr-menu"),$("#mobile-body-overly").toggle()}),$rootScope.g.manageJobsData=function(jobs,cities){for(var i in jobs)for(var j in cities)jobs[i].jobCity==cities[j]._id&&(jobs[i].cityName=cities[j].city);return jobs},$rootScope.g.globalvarObj={},$scope.comnObj.init=function(){icdb.get("JobLocations",function(response){$rootScope.g.globalvarObj.cites=response}),icdb.get("Qualifications",function(response){$rootScope.g.globalvarObj.qualification=response}),icdb.get("AreaOfInterest",function(response){$rootScope.g.globalvarObj.areaOfInterest=response})},$scope.comnObj.init()}]),appModule.controller("UserController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","alertService","$timeout","$state",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,alertService,$timeout,$state){$scope.uObj={},$scope.uObj.initAds=function(){$timeout(function(){(adsbygoogle=window.adsbygoogle||[]).push({})},1e3)},$scope.uObj.cuObj={},$scope.uObj.cuObj.add={},$scope.uObj.cuObj.add.model={},$scope.uObj.cuObj.add.isSubmited=!1,$scope.uObj.cuObj.add.isReqSent=!1,$scope.uObj.cuObj.add.submit=function(form){form.$valid?($scope.uObj.cuObj.add.isReqSent=!0,$http.post("/api/user/register",$scope.uObj.cuObj.add.model).then(function(response){if(response.data&&response.data.status){if(response.data.userExist)return $scope.uObj.cuObj.add.isSubmited=!1,$scope.uObj.cuObj.add.isReqSent=!1,void alertService.flash("error","User already exist.");$scope.uObj.cuObj.add.isSubmited=!1,$scope.uObj.cuObj.add.isReqSent=!1,$scope.uObj.cuObj.add.model={},alertService.flash("success","You are successfully register."),$state.go("login")}else alertService.flash("error","Something is wrong.")})):$scope.uObj.cuObj.add.isSubmited=!0},$scope.uObj.cuObj.login={},$scope.uObj.cuObj.login.isSubmited=!1,$scope.uObj.cuObj.login.isReqSent=!1,$scope.uObj.cuObj.login.submit=function(form){form.$valid?($scope.uObj.cuObj.login.isReqSent=!0,$http.post("/api/user/login",$scope.uObj.cuObj.login.model).then(function(response){response.data&&response.data.status?(alertService.flash("success","You are successfully loggedin."),$scope.uObj.cuObj.login.isSubmited=!1,$scope.uObj.cuObj.login.isReqSent=!1,$state.go("user-dashboard")):($scope.uObj.cuObj.login.isSubmited=!1,$scope.uObj.cuObj.login.isReqSent=!1,alertService.flash("error","User not found."))})):$scope.uObj.cuObj.login.isSubmited=!0},$scope.uObj.cuObj.fpass={},$scope.uObj.cuObj.fpass.isSubmited=!1,$scope.uObj.cuObj.fpass.isReqSent=!1,$scope.uObj.cuObj.fpass.submit=function(form){form.$valid?($scope.uObj.cuObj.fpass.isReqSent=!0,$http.post("/api/user/forgot-pass",{email:$scope.uObj.cuObj.fpass.model.email}).then(function(response){1==response.data.status&&alertService.flash("error","Something is wrong."),2==response.data.status&&alertService.flash("success","Check your email for new Password."),3==response.data.status&&alertService.flash("error","Email address not associated with any account.")})):$scope.uObj.cuObj.fpass.isSubmited=!0}}]),appModule.controller("HomeController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.homeObj={},$scope.homeObj.cobj={},$scope.homeObj.cobj.category=[{id:"1",name:"Industrial",iconClass:"fa fa-industry"},{id:"2",name:"Computer",iconClass:"fa fa-laptop"},{id:"3",name:"Account",iconClass:"fa fa-briefcase"},{id:"4",name:"Sales & Marketing",iconClass:"fa fa-handshake-o"},{id:"5",name:"Back Office",iconClass:"fa fa-building-o"},{id:"6",name:"Others",iconClass:"fa fa-question-circle-o"}],$scope.homeObj.initads=function(){(adsbygoogle=window.adsbygoogle||[]).push({})},$scope.homeObj.cobj.commingSoon=function(){$("#comming-soon").modal("show")},$scope.homeObj.cobj.gotoLocation=function(key,id){$location.path("category/"+key+"/"+id)},$scope.homeObj.advObj={},$scope.homeObj.cobj.getAdvertisement=function(){icdb.getCondition("advertisement",{isActive:!0},function(advResponse){$scope.homeObj.advObj=advResponse[0]})},$scope.homeObj.cobj.getAdvertisement(),$scope.homeObj.cobj.filter={isActive:3},$scope.homeObj.cobj.getFilterData=function(key){$scope.homeObj.cobj.filter=3!=key?{isActive:key,filterObj:{jobWorkType:key}}:{isActive:3}},$scope.homeObj.jobjByFilter={},$scope.homeObj.jobjByFilter.list={},$scope.homeObj.jobjByFilter.list.isLoading=!1,$scope.homeObj.jobjByFilter.skip=0,$scope.homeObj.jobjByFilter.data=[];var skip=0;$scope.homeObj.jobjByFilter.init=function(){$scope.homeObj.jobjByFilter.list.isLoading=!0,getLocation();var condition={};1==$state.params.key&&(condition.jobCategory=$state.params.categoryId),2==$state.params.key&&(condition.jobCity=$state.params.categoryId),$http.post("/api/site/get-jobsby-filter",{condition:condition,skip:skip}).success(function(response){skip+=20,$scope.homeObj.jobjByFilter.data=response.result,$scope.homeObj.jobjByFilter.totalJobs=response.count,$scope.homeObj.jobjByFilter.data=$rootScope.g.manageJobsData($scope.homeObj.jobjByFilter.data,$scope.homeObj.jobObj.list.jobsByLocation),$timeout(function(){$scope.homeObj.jobjByFilter.list.isLoading=!1},200)})},$scope.homeObj.jobObj={},$scope.homeObj.jobObj.list={},$scope.homeObj.jobObj.list.isLoading=!1,$scope.homeObj.jobObj.list.isLoadMore=!1,$scope.homeObj.jobObj.list.data=[],$scope.homeObj.jobObj.list.totalJobs=0,$scope.homeObj.jobObj.list.jobsByLocation=[];var getLocation=function(){$http.get("/api/v1/app/jobs-by-location").success(function(response){$scope.homeObj.jobObj.list.jobsByLocation=response})};$scope.homeObj.jobObj.init=function(status){status?$scope.homeObj.jobObj.list.isLoadMore=!0:$scope.homeObj.jobObj.list.isLoading=!0,getLocation(),$http.post("/api/site/get-jobs",{skip:$scope.homeObj.jobObj.list.data.length}).success(function(response){if(response.result&&response.result.length)for(var r in response.result)$scope.homeObj.jobObj.list.data.push(response.result[r]);$scope.homeObj.jobObj.list.totalJobs=response.count,$scope.homeObj.jobObj.list.data=$rootScope.g.manageJobsData($scope.homeObj.jobObj.list.data,$scope.homeObj.jobObj.list.jobsByLocation),$timeout(function(){$scope.homeObj.jobObj.list.isLoading=!1,$scope.homeObj.jobObj.list.isLoadMore=!1},200)})},$scope.homeObj.jobObj.preview={},$scope.homeObj.jobObj.preview.data={},$scope.homeObj.jobObj.preview.open=function(row){$scope.homeObj.jobObj.preview.data=angular.copy(row),$("#job-preview").modal("show"),row.totalView||(row.totalView=0),row.totalView+=1,icdb.update("JobsBazaar",row._id,row,function(result){})},$scope.homeObj.jobObj.preview.close=function(row){$scope.homeObj.jobObj.preview.data={},$("#job-preview").modal("hide")},$scope.homeObj.jobObj.applyjob={},$scope.homeObj.jobObj.applyjob.model={},$scope.homeObj.jobObj.applyjob.openModal=function(jobRow){$scope.homeObj.jobObj.applyjob.model.jobId=jobRow._id,$scope.homeObj.jobObj.applyjob.model.areaOfInterest=[],$scope.homeObj.jobObj.applyjob.model.gender="male",$("#confirm-contact").modal("show")},$scope.homeObj.jobObj.applyjob.fromDetail=function(jobRow){$("#job-preview").modal("hide"),$timeout(function(){$scope.homeObj.jobObj.applyjob.openModal(angular.copy(jobRow))},1e3)},$scope.homeObj.jobObj.applyjob.closeModal=function(){$scope.homeObj.jobObj.applyjob.model={},$scope.homeObj.jobObj.applyjob.isSubmited=!1,$scope.homeObj.jobObj.applyjob.isReqSent=!1,$scope.homeObj.contactObj.isSubmited=!1,$scope.homeObj.contactObj.isReqSent=!1,$("#apply-for-job").modal("hide"),$("#confirm-contact").modal("hide")},$scope.homeObj.contactObj={},$scope.homeObj.contactObj.model={},$scope.homeObj.contactObj.isSubmited=!1,$scope.homeObj.contactObj.isReqSent=!1,$scope.homeObj.contactObj.submit=function(form){form.$valid?($scope.homeObj.contactObj.isReqSent=!0,$http.post("api/v1/app/check-contact/unique",{jobId:$scope.homeObj.jobObj.applyjob.model.jobId,contact:$scope.homeObj.jobObj.applyjob.model.mobile}).success(function(response){1==response.status&&(alertService.flash("success",response.message),$scope.homeObj.jobObj.applyjob.closeModal()),2==response.status&&(alertService.flash("error",response.message),$scope.homeObj.jobObj.applyjob.closeModal()),3==response.status&&($("#confirm-contact").modal("hide"),$timeout(function(){$("#apply-for-job").modal("show")},500))})):$scope.homeObj.contactObj.isSubmited=!0},$scope.homeObj.jobObj.applyjob.isSubmited=!1,$scope.homeObj.jobObj.applyjob.isReqSent=!1,$scope.homeObj.jobObj.applyjob.submit=function(form,status){status||form.$valid?($scope.homeObj.jobObj.applyjob.isReqSent=!0,icdb.insert("CandidateRegister",$scope.homeObj.jobObj.applyjob.model,function(response1){icdb.insert("TrackUniqueContact",{jobId:$scope.homeObj.jobObj.applyjob.model.jobId,contact:$scope.homeObj.jobObj.applyjob.model.mobile},function(response1){}),alertService.flash("success","Congratulations, You are successfully apply for job."),$scope.homeObj.jobObj.applyjob.closeModal()})):$scope.homeObj.jobObj.applyjob.isSubmited=!0}}]),appModule.controller("ContactController",["$scope","$http","$location","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.conObj={},$scope.conObj.init={},$scope.conObj.initAds=function(){$timeout(function(){(adsbygoogle=window.adsbygoogle||[]).push({})},1e3)},$scope.conObj.inqObj={},$scope.conObj.inqObj.model={},$scope.conObj.inqObj.isSubmited=!1,$scope.conObj.inqObj.isReqSent=!1,$scope.conObj.inqObj.palceHolder="Enter your name",$scope.conObj.inqObj.inquireyFor=1,$scope.conObj.inqObj.submit=function(form){form.$valid?($scope.conObj.inqObj.isReqSent=!0,icdb.insert("Inquiry",$scope.conObj.inqObj.model,function(result){$scope.conObj.inqObj.model={},$scope.conObj.inqObj.isSubmited=!1,$scope.conObj.inqObj.isReqSent=!1,$("#thankyou-contact").modal("show")})):$scope.conObj.inqObj.isSubmited=!0}}]),appModule.controller("AboutusController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.absObj={},$scope.absObj.team={},$scope.absObj.team.teamMember=[],$scope.absObj.team.init=function(){icdb.get("OurTeam",function(response){$scope.absObj.team.teamMember=response})},$scope.absObj.initads=function(){$timeout(function(){(adsbygoogle=window.adsbygoogle||[]).push({})},1e3)}}]),appModule.controller("UserDashboardController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.udObj={},$scope.udObj.jobObj={},$scope.udObj.jobObj.list={},$scope.udObj.jobObj.list.data=[],$scope.udObj.jobObj.list.isLoading=!1,$scope.udObj.jobObj.list.init=function(){$scope.udObj.jobObj.list.isLoading=!0,$http.post("/api/v1/get-client-jobs",{skip:0,userId:$rootScope.g.loggedUser._id}).success(function(response){$scope.udObj.jobObj.list.data=response.jobs,$timeout(function(){$scope.udObj.jobObj.list.isLoading=!1},10)})},$scope.udObj.jobObj.list.init(),$scope.udObj.profileObj={},$scope.udObj.profileObj.model={},$scope.udObj.profileObj.isSubmited=!1,$scope.udObj.profileObj.init=function(){$scope.udObj.profileObj.model=angular.copy($rootScope.g.loggedUser)},$scope.udObj.profileObj.submit=function(form){form.$valid?($scope.udObj.profileObj.isReqSent=!0,icdb.update("OurTeam",$scope.udObj.profileObj.model._id,$scope.udObj.profileObj.model,function(result){$scope.udObj.profileObj.isSubmited=!1,$scope.udObj.profileObj.isReqSent=!1,alertService.flash("success","Profile has been updated successfully.")})):$scope.udObj.profileObj.isSubmited=!0},$scope.udObj.chPassObj={},$scope.udObj.chPassObj.model={},$scope.udObj.chPassObj.isSubmited=!1,$scope.udObj.chPassObj.isReqSent=!1,$scope.udObj.chPassObj.submit=function(form){form.$valid?$scope.udObj.chPassObj.model.oldPassword==$rootScope.g.loggedUser.password?($scope.udObj.chPassObj.isReqSent=!0,$http.post("/api/user/change-pass",{_id:$rootScope.g.loggedUser._id,password:$scope.udObj.chPassObj.model.password}).success(function(result){$scope.udObj.chPassObj.isSubmited=!1,$scope.udObj.chPassObj.isReqSent=!1,$scope.udObj.chPassObj.model={},alertService.flash("success","Password has been updated successfully.")})):alertService.flash("error","Old Password is incorrect."):$scope.udObj.chPassObj.isSubmited=!0},$scope.udObj.jobObj.add={},$scope.udObj.jobObj.add.model={},$scope.udObj.jobObj.add.openModal=function(){$scope.udObj.jobObj.add.model.jobWorkType=1,$scope.udObj.jobObj.add.model.candidateType=1,$scope.udObj.jobObj.add.model.salaryType=1,$scope.udObj.jobObj.add.model.interviewDateFrom=new Date,$scope.udObj.jobObj.add.model.interviewDateTo=new Date,$scope.udObj.jobObj.add.model.requiredDoc=[],$scope.udObj.jobObj.add.model.department=[],$scope.udObj.jobObj.add.model.requiredDoc.push(globalObj.requiredDocuments[0]),$("#create-new-job").modal("show")},$scope.udObj.jobObj.add.closeModal=function(){$scope.udObj.jobObj.add.model={},$scope.udObj.jobObj.add.isSubmited=!1,$scope.udObj.jobObj.add.isReqSent=!1,$("#create-new-job").modal("hide")},$scope.udObj.jobObj.add.isSubmited=!1,$scope.udObj.jobObj.add.isReqSent=!1,$scope.udObj.jobObj.add.submit=function(form){form.$valid?$rootScope.g.loggedUser._id?($scope.udObj.jobObj.add.isReqSent=!0,$scope.udObj.jobObj.add.model.userId=$rootScope.g.loggedUser._id,$scope.udObj.jobObj.add.model.createdBy="User",icdb.insert("JobsBazaar",$scope.udObj.jobObj.add.model,function(result){$scope.udObj.jobObj.add.closeModal(),alertService.flash("success","Job has been created successfully.")})):alertService.flash("error","Plase login to post job."):$scope.udObj.jobObj.add.isSubmited=!0},$scope.udObj.jobObj.edit={},$scope.udObj.jobObj.edit.model={},$scope.udObj.jobObj.edit.openModal=function(row){$scope.udObj.jobObj.edit.model=angular.copy(row),$scope.udObj.jobObj.edit.model.interviewDateFrom=new Date(row.interviewDateFrom),$scope.udObj.jobObj.edit.model.interviewDateTo=new Date(row.interviewDateTo),$("#update-existing-job").modal("show")},$scope.udObj.jobObj.edit.closeModal=function(){$scope.udObj.jobObj.edit.model.model={},$scope.udObj.jobObj.edit.isSubmited=!1,$scope.udObj.jobObj.edit.isReqSent=!1,$("#update-existing-job").modal("hide")},$scope.udObj.jobObj.edit.isSubmited=!1,$scope.udObj.jobObj.edit.isReqSent=!1,$scope.udObj.jobObj.edit.submit=function(form){form.$valid?($scope.udObj.jobObj.edit.isReqSent=!0,$scope.udObj.jobObj.edit.model.createdBy="User",icdb.update("JobsBazaar",$scope.udObj.jobObj.edit.model._id,$scope.udObj.jobObj.edit.model,function(response){$scope.udObj.jobObj.edit.closeModal(),$scope.udObj.jobObj.list.data.push(response),alertService.flash("success","Job has been created successfully.")})):$scope.udObj.jobObj.edit.isSubmited=!0},$scope.udObj.jobObj.delete={},$scope.udObj.jobObj.delete.submit=function(row,status){status?icdb.remove("JobsBazaar",row._id,function(response){for(var r in $scope.udObj.jobObj.list.data)$scope.udObj.jobObj.list.data[r]._id==row._id&&$scope.udObj.jobObj.list.data.splice(r,1)}):row.isDelete=!1}}]),appModule.controller("CandidateRegisterController",["$scope","$http","$location","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$rootScope,$timeout,$state,icdb,alertService){$scope.newReg={},$scope.newReg.commonData={},$scope.newReg.initAds=function(){$timeout(function(){(adsbygoogle=window.adsbygoogle||[]).push({})},1e3)},$scope.newReg.post={},$scope.newReg.post.selectedStep=1,$scope.newReg.post.model={},$scope.newReg.post.model.gender="male",$scope.newReg.post.model.areaOfInterest=[],$scope.newReg.confirm={},$scope.newReg.confirm.model={},$scope.newReg.confirm.isSubmited=!1,$scope.newReg.confirm.isReqSent=!1,$scope.newReg.confirm.submit=function(form){form.$valid?($scope.newReg.confirm.isReqSent=!0,$rootScope.g.infoText={},icdb.getCondition("TrackUniqueContact",{contact:$scope.newReg.confirm.model.mobile},function(cResponse){cResponse.length?alertService.flash("success","You are already register user, You can apply to any job using this contact."):($scope.newReg.post.model.mobile=$scope.newReg.confirm.model.mobile,$scope.newReg.post.selectedStep=2),$scope.newReg.confirm.isReqSent=!1,$scope.newReg.confirm.isSubmited=!1})):$scope.newReg.confirm.isSubmited=!0},$scope.newReg.post.isReqSent=!1,$scope.newReg.post.isSubmited=!1,$scope.newReg.post.submit=function(form,status){form.$valid?($scope.newReg.post.isReqSent=!0,icdb.insert("CandidateRegister",$scope.newReg.post.model,function(response){icdb.insert("TrackUniqueContact",{jobId:"",contact:$scope.newReg.post.model.mobile},function(response1){$scope.newReg.post.isReqSent=!1,alertService.flash("success","Congratulations, You are successfully register."),$location.path("/")})})):$scope.newReg.post.isSubmited=!0}}]),appModule.factory("IcMean",[function(){return{name:"ic-mean"}}]),appModule.factory("icdb",["$http",function($http){var dataFactory={insert:function(model,data,callback){data.model=model,$http.post("/api/common/add-data",data).success(function(result){callback(result)})},update:function(model,_id,data,callback){data.model=model,data._id=_id,$http.post("/api/common/edit-data",data).success(function(result){callback(result)})},updateAddChild:function(model,entityId,entityKey,data,callback){data.model=model,data.entityId=entityId,data.entityKey=entityKey,$http.post("/api/common/update-data",data).success(function(result){callback(result)})},updateChild:function(model,entityId,entityKey,childEntityId,data,callback){data.model=model,data.entityId=entityId,data.childEntityId=childEntityId,data.entityKey=entityKey,$http.post("/api/common/update-child-data",data).success(function(result){callback(result)})},removeChilds:function(model,entityId,entityKey,data,callback){data.model=model,data._id=entityId,data.entityKey=entityKey,$http.post("/api/common/delete",data).success(function(result){callback(result)})},insertChild:function(model,entityId,entityKey,data,callback){data.model=model,data.entityId=entityId,data.entityKey=entityKey,data.isChildInsert=!0,$http.post("/api/common/add-data",data).success(function(result){callback(result)})},remove:function(model,_id,callback){$http.post("/api/common/delete",{model:model,_id:_id}).success(function(result){callback(result)})},get:function(model,callback){$http.post("/api/common/get-data",{model:model}).success(function(result){callback(result)})},getCondition:function(model,condition,callback){$http.post("/api/common/get-condition",{model:model,condition:condition}).success(function(result){callback(result)})},getSingle:function(model,_id,callback){$http.post("/api/common/single-data",{model:model,_id:_id}).success(function(result){callback(result)})},removeChilds:function(model,entityId,entityKey,data,callback){data.model=model,data._id=entityId,data.entityKey=entityKey,$http.post("/api/common/delete",data).success(function(result){callback(result)})}};return dataFactory}]),appModule.factory("alertService",["toastr",function(toastr){var alertService={};return alertService.flash=function(type,msg,isRedirect){"success"!=type&&"error"!=type||function(msgType,msg){"success"==msgType?toastr.success(msgType,msg):toastr.error(msgType,msg)}(type,msg)},alertService}]),appModule.factory("Global",[function(){}]);