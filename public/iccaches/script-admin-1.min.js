var globalObj={categoryArray:[{key:"1",name:"Post Graduation"},{key:"2",name:"Under Graduates"},{key:"3",name:"BE"},{key:"4",name:"DIPLOMA"},{key:"5",name:"ITI"},{key:"6",name:"Other"}],requiredDocuments:["Any Id Proof","Adhar Card","Pan Card","Driving Licence","Voter Id","Passport Size Photo (2)"],categoryObject:{1:"Post Graduation",2:"Under Graduates",3:"BE / ME",4:"DIPLOMA",5:"ITI",6:"Other"},candidateMinExp:{1:"Fresher",2:"6 Month To 1 Year",3:"1 To 2 Year",4:"3 To 5 Year",5:"5 Year +"},candidateGenderType:{1:"Male",2:"Female",3:"Both"},whPerDay:{1:"4 Hours",2:"6 Hours",3:"8 Hours",4:"10 Hours",5:"12 Hours"},jobCategory:{1:"Industrial",2:"Computer",3:"Account",4:"Sales & Marcketing",5:"Back Office",6:"Others"},jobWorkType:{1:"Full Time",2:"Part Time",3:"Both"},dpFormat:"dd-MM-yyyy",multiSelect:function(array,key){-1==array.indexOf(key)?array.push(key):array.splice(array.indexOf(key),1)}},getUnsupportedFileExtension=function(){return["php","js","css","asp","rb","htaccess","htpasswd","html"]};function sortByKey(array,key){return array.sort(function(a,b){var x=a[key],y=b[key];return x<y?-1:y<x?1:0})}var convertToBR=function(value){return value&&"string"==typeof value?value.replace(/\n/g,"<br />"):""},trackVisitor=function(){try{$.ajax({type:"POST",url:window.location.origin+"/api/site/user-visitor",data:{user_id:""}}).done(function(msg){})}catch(err){console.log("err >>>>",err)}};trackVisitor();var getUID=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0;return("x"==c?r:3&r|8).toString(16)})},checkUserIsLoggedOrNot=function($q,$timeout,$http,$location,$rootScope,$state,status){var deferred=$q.defer();return $http.get("/users/me").success(function(user){user&&user._id?($rootScope.g.loggedUser=user,$timeout(deferred.resolve)):$state.go("login")}).error(function(){$timeout(deferred.resolve)}),deferred.promise},checkLoggedIn=function($q,$timeout,$http,$location,$rootScope,$state){return checkUserIsLoggedOrNot($q,$timeout,$http,$location,$rootScope,$state,!0)};checkLoggedIn.$inject=["$q","$timeout","$http","$location","$rootScope","$state"];var checkLoggedOut=function($q,$timeout,$http,$location,$rootScope,$state){return checkUserIsLoggedOrNot($q,$timeout,$http,$location,$rootScope,$state,!1)},appModule=angular.module("adminModule",["ngRoute","ngCookies","ngResource","ui.bootstrap","ui.router","toastr","ngAnimate"]);appModule.run(["$rootScope","$timeout","$state","$location",function($rootScope,$timeout,$state,$location){$rootScope.g={},$rootScope.g.adminData=globalObj,$rootScope.$on("$stateChangeSuccess",function(event,next,current){$("html, body").animate({scrollTop:0},"slow")}),$rootScope.g.stateGo=function(key){$state.go(key)},$rootScope.g.globalPrintFunction=function(){window.print()},$rootScope.g.getActiveClass=function(key){return $location.path()==key?"active":""},$rootScope.g.downloadCSV=function(action,inputObj){$("#download-csv-helper").attr("action",action),$("#download-csv-helper").html(function(){var returnHtml='<input type="hidden" name="isDownloadCSV"  value="true" />';for(var f1Row in inputObj){if("csvData"==f1Row)returnHtml+='<input type="hidden" name="'+f1Row+'"  value='+JSON.stringify(inputObj[f1Row])+" />";else if("fieldCheck"==f1Row||"fieldNM"==f1Row||"condition"==f1Row||"valueDt"==f1Row)returnHtml+='<input type="hidden" name="'+f1Row+'"  value='+JSON.stringify(inputObj[f1Row])+" />";else if("tierNM"==f1Row||"tierNMCSV"==f1Row)returnHtml+='<input type="hidden" name="'+f1Row+'"  value='+inputObj[f1Row]+" />";else returnHtml+='<input type="hidden" name="'+f1Row+'"  value="'+inputObj[f1Row]+'" />'}return returnHtml}()),$timeout(function(){$("#download-csv-helper").submit()},500)}}]),appModule.directive("numbersOnly",function(){return{require:"ngModel",link:function(scope,element,attr,ngModelCtrl){ngModelCtrl.$parsers.push(function(text){if(text){var transformedInput=text.replace(/[^0-9]/g,"");return transformedInput!==text&&(ngModelCtrl.$setViewValue(transformedInput),ngModelCtrl.$render()),transformedInput}})}}}),appModule.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode({enabled:!1,requireBase:!0}).hashPrefix("!"),$stateProvider.state("login",{url:"/login",templateUrl:"/admin-angular/views/users/login.html"}),$stateProvider.state("signup",{url:"/signup",templateUrl:"/admin-angular/views/users/signup.html"}),$stateProvider.state("forgot-password",{url:"/forgot-password",templateUrl:"/admin-angular/views/users/forgot-password.html"}),$stateProvider.state("dashboard",{url:"/dashboard",templateUrl:"/admin-angular/views/dashboard.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("qualification",{url:"/qualification",templateUrl:"/admin-angular/views/manage-qualification.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("location-mgmt",{url:"/location-mgmt",templateUrl:"/admin-angular/views/manage-location.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("area-of-interest",{url:"/area-of-interest",templateUrl:"/admin-angular/views/manage-area-of-interest.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("sitecontent-mgmt",{url:"/sitecontent-mgmt",templateUrl:"/admin-angular/views/manage-site-content.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("jobs-mgmt",{url:"/jobs-mgmt",templateUrl:"/admin-angular/views/manage-jobs.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("candidates-mgmt",{url:"/candidates-mgmt",templateUrl:"/admin-angular/views/candidates-mgmt.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("company-user-mgmt",{url:"/company-user-mgmt",templateUrl:"/admin-angular/views/manage-company-user.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("inquiry-mgmt",{url:"/inquiry-mgmt",templateUrl:"/admin-angular/views/manage-user-inquiry.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("advertisement",{url:"/advertisement",templateUrl:"/admin-angular/views/advertisement.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("account",{url:"/account",templateUrl:"/admin-angular/views/account.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("attendance",{url:"/attendance",templateUrl:"/admin-angular/views/attendance.html",resolve:{loggedin:checkLoggedIn}}),$stateProvider.state("track-contact",{url:"/track-contact",templateUrl:"/admin-angular/views/track-contact.html",resolve:{loggedin:checkLoggedIn}}),$urlRouterProvider.otherwise("/login")}]),appModule.directive("convertToNumber",function(){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$parsers.push(function(val){return parseInt(val,10)}),ngModel.$formatters.push(function(val){return""+val})}}}),angular.module("adminModule").config(["toastrConfig",function(toastrConfig){angular.extend(toastrConfig,{autoDismiss:!1,containerId:"toast-container",maxOpened:0,newestOnTop:!0,positionClass:"toast-top-right",preventDuplicates:!1,preventOpenDuplicates:!1,target:"body"})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,["adminModule"]),setTimeout(function(){$("#front-spinner-bx").hide(),$(".body-main-cn").show()},500)}),appModule.controller("AdminController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.adminObj={},$rootScope.globalvarObj={},$rootScope.globalObj={},$scope.adminObj.init=function(){icdb.get("JobLocations",function(response){$rootScope.globalvarObj.cites=response}),icdb.get("Qualifications",function(response){$rootScope.globalvarObj.qualification=response}),icdb.get("AreaOfInterest",function(response){$rootScope.globalvarObj.areaOfInterest=response}),icdb.getCondition("JobsBazaar",{status:2},function(response){$rootScope.globalvarObj.activeJobs=response})},$scope.adminObj.init()}]),appModule.controller("UserController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","alertService","$timeout","$state",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,alertService,$timeout,$state){$scope.adObj={},$scope.adObj.stateGo=function(key){$state.go(key)},$scope.adObj.regObj={},$scope.adObj.regObj.add={},$scope.adObj.regObj.add.model={},$scope.adObj.regObj.add.isSubmited=!1,$scope.adObj.regObj.add.isReqSent=!1,$scope.adObj.regObj.add.submit=function(form){form.$valid?($scope.adObj.regObj.add.isReqSent=!0,$http.post("/api/admin-user/register",$scope.adObj.regObj.add.model).then(function(response){response.data&&response.data.status?($scope.adObj.regObj.add.isSubmited=!1,$scope.adObj.regObj.add.isReqSent=!1,$scope.adObj.regObj.add.model={},alertService.flash("success","You are successfully register."),$state.go("login")):alertService.flash("error","Something is wrong.")})):$scope.adObj.regObj.add.isSubmited=!0},$scope.adObj.login={},$scope.adObj.login.isSubmited=!1,$scope.adObj.login.isReqSent=!1,$scope.adObj.login.submit=function(form){form.$valid?($scope.adObj.login.isReqSent=!0,$http.post("/api/admin-user/login",$scope.adObj.login.model).then(function(response){response.data&&response.data.status?(alertService.flash("success","You are successfully loggedin."),$scope.adObj.login.isSubmited=!1,$scope.adObj.login.isReqSent=!1,$state.go("dashboard")):($scope.adObj.login.isSubmited=!1,$scope.adObj.login.isReqSent=!1,alertService.flash("error","User not found."))})):$scope.adObj.login.isSubmited=!0}}]),appModule.controller("DashboardController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.dbObj={},$scope.dbObj.comObj={},$scope.dbObj.comObj.loading=!1,$scope.dbObj.comObj.initGlobal=function(){$scope.dbObj.comObj.loading=!0,$http.get("/api/admin/get/dashboard-counts").then(function(response){$scope.dbObj.comObj.totalCounts=response.data,$timeout(function(){$scope.dbObj.comObj.loading=!1},10)})},$scope.job={},$scope.job.create={},$scope.job.create.model={},$scope.job.create.openModal=function(){$scope.job.create.model.jobWorkType=1,$scope.job.create.model.candidateType=1,$scope.job.create.model.salaryType=1,$scope.job.create.model.interviewDateFrom=new Date,$scope.job.create.model.interviewDateTo=new Date,$scope.job.create.model.requiredDoc=[],$scope.job.create.model.department=[],$scope.job.create.model.requiredDoc.push($rootScope.g.adminData.requiredDocuments[0]),$("#add-new-job").modal("show")},$scope.job.create.closeModal=function(){$scope.job.create.model={},$scope.job.create.isSubmited=!1,$scope.job.create.isReqSent=!1,$("#add-new-job").modal("hide")},$scope.job.create.isSubmited=!1,$scope.job.create.isReqSent=!1,$scope.job.create.submit=function(form){form.$valid?($scope.job.create.isReqSent=!0,$scope.job.create.model.userId=$rootScope.g.loggedUser._id,icdb.insert("JobsBazaar",$scope.job.create.model,function(result){$scope.job.create.closeModal(),alertService.flash("success","Job has been created successfully.")})):$scope.job.create.isSubmited=!0},$scope.cdUser={},$scope.cdUser.create={},$scope.cdUser.create.model={},$scope.cdUser.create.openModal=function(){$scope.cdUser.create.model.jobWorkType=1,$scope.cdUser.create.model.candidateType=1,$scope.cdUser.create.model.salaryType=1,$scope.cdUser.create.model.gender="male",$scope.cdUser.create.model.areaOfInterest=[],$("#candidate-register-modal").modal("show")},$scope.cdUser.create.closeModal=function(){$scope.cdUser.create.model={},$scope.cdUser.create.isSubmited=!1,$scope.cdUser.create.isReqSent=!1,$("#candidate-register-modal").modal("hide")},$scope.cdUser.create.isSubmited=!1,$scope.cdUser.create.isReqSent=!1,$scope.cdUser.create.submit=function(form){form.$valid?($scope.cdUser.create.isReqSent=!0,icdb.insert("CandidateRegister",$scope.cdUser.create.model,function(response){$scope.cdUser.create.closeModal(),alertService.flash("success","Job has been created successfully.")})):$scope.cdUser.create.isSubmited=!0}}]),appModule.controller("QualificationController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.qlObj={},$scope.qlObj.list={},$scope.qlObj.list.loading=!1,$scope.qlObj.list.data=[],$scope.qlObj.list.count=0,$scope.qlObj.list.init=function(){$scope.qlObj.list.loading=!0,$http.post("api/admin/get-data/with-condition",{model:"Qualifications",skip:0,condition:{}}).success(function(response){if(response.data&&response.data.length){for(var row in response.data)$scope.qlObj.list.data.push(response.data[row]);$scope.qlObj.list.count=response.count}$timeout(function(){$scope.qlObj.list.loading=!1},10)})},$scope.qlObj.add={},$scope.qlObj.add.model={},$scope.qlObj.add.model.qualifyIn="1",$scope.qlObj.add.submit=function(){for(var i in $scope.qlObj.list.data)if($scope.qlObj.list.data[i].name.toLowerCase()===$scope.qlObj.add.model.name.toLowerCase())return void alertService.flash("error","Duplicate not allowed.");icdb.insert("Qualifications",$scope.qlObj.add.model,function(response){$scope.qlObj.add.model={},$scope.qlObj.add.model.qualifyIn="1",$scope.qlObj.list.data.push(response.result),alertService.flash("success","Qualifiction has been created successfully.")})},$scope.qlObj.edit={},$scope.qlObj.edit.model={},$scope.qlObj.edit.openModal=function(dataRow){$scope.qlObj.edit.model=angular.copy(dataRow),$("#update-qualification").modal("show")},$scope.qlObj.edit.closeModal=function(){$scope.qlObj.edit.model={},$("#update-qualification").modal("hide")},$scope.qlObj.edit.submit=function(){for(var i in $scope.qlObj.list.data)if($scope.qlObj.list.data[i].name.toLowerCase()===$scope.qlObj.edit.model.name.toLowerCase()&&$scope.qlObj.edit.model._id!=$scope.qlObj.list.data[i]._id)return void alertService.flash("error","Duplicate not allowed.");icdb.update("Qualifications",$scope.qlObj.edit.model._id,{name:$scope.qlObj.edit.model.name,qualifyIn:$scope.qlObj.edit.model.qualifyIn},function(result){for(var i in $scope.qlObj.list.data)$scope.qlObj.list.data[i]._id==$scope.qlObj.edit.model._id&&($scope.qlObj.list.data[i].name=$scope.qlObj.edit.model.name,$scope.qlObj.list.data[i].qualifyIn=$scope.qlObj.edit.model.qualifyIn);alertService.flash("success","Qualifiction has been updated successfully."),$scope.qlObj.edit.closeModal()})},$scope.qlObj.edit.activeQa=function(row,status){row.status=status,icdb.update("Qualifications",row._id,row,function(result){status?alertService.flash("success","Qualifiction has been Activated successfully."):alertService.flash("success","Qualifiction has been Deactivated successfully.")})},$scope.qlObj.delete={},$scope.qlObj.delete.openModal=function(dataRow){$("#common-delete-modal").modal("show"),$scope.qlObj.delete.submit=function(){icdb.remove("Qualifications",dataRow._id,function(result){for(var i in $scope.qlObj.list.data)$scope.qlObj.list.data[i]._id==dataRow._id&&$scope.qlObj.list.data.splice(i,1);alertService.flash("success","Qualifiction has been deleted successfully.")})},$rootScope.g.submitDelete=$scope.qlObj.delete.submit}}]),appModule.controller("LocationController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.jl={},$scope.jl.list={},$scope.jl.list.loading=!1,$scope.jl.list.data=[],$scope.jl.list.init=function(){$scope.jl.list.loading=!0,icdb.get("JobLocations",function(result){$scope.jl.list.data=result,$timeout(function(){$scope.jl.list.loading=!1},10)})},$scope.jl.add={},$scope.jl.add.model={},$scope.jl.add.submit=function(){for(var i in $scope.jl.list.data)if($scope.jl.list.data[i].city.toLowerCase()===$scope.jl.add.model.city.toLowerCase())return void alertService.flash("error","Duplicate not allowed.");icdb.insert("JobLocations",$scope.jl.add.model,function(response){$scope.jl.add.model={},$scope.jl.list.data.push(response.result),alertService.flash("success","Job Location has been created successfully.")})},$scope.jl.edit={},$scope.jl.edit.model={},$scope.jl.edit.openModal=function(row){for(var i in $scope.jl.list.data)$scope.jl.list.data[i].isEdit=!1;row.isEdit=!0,$scope.jl.edit.model=angular.copy(row)},$scope.jl.edit.closeModal=function(row){row.isEdit=!1,$scope.jl.edit.model={}},$scope.jl.edit.submit=function(dataRow){for(var i in $scope.jl.list.data)if($scope.jl.list.data[i].city.toLowerCase()===$scope.jl.edit.model.city.toLowerCase()&&$scope.jl.edit.model._id!=$scope.jl.list.data[i]._id)return void alertService.flash("error","Duplicate not allowed.");icdb.update("JobLocations",dataRow._id,{city:$scope.jl.edit.model.city},function(response){for(var i in dataRow.isEdit=!1,$scope.jl.list.data)$scope.jl.list.data[i]._id==dataRow._id&&($scope.jl.list.data[i].city=dataRow.city);alertService.flash("success","Job Location has been updated successfully.")})},$scope.jl.edit.activeQa=function(row,status){row.status=status,icdb.update("JobLocations",row._id,row,function(response){status?alertService.flash("success","Job Location has been Activated successfully."):alertService.flash("success","Job Location has been Deactivated successfully.")})},$scope.jl.delete={},$scope.jl.delete.openModal=function(dataRow){$("#common-delete-modal").modal("show"),$scope.jl.delete.submit=function(){icdb.remove("JobLocations",dataRow._id,function(result){for(var i in $scope.jl.list.data)$scope.jl.list.data[i]._id==dataRow._id&&$scope.jl.list.data.splice(i,1);alertService.flash("success","Job Location has been deleted successfully.")})},$rootScope.g.submitDelete=$scope.jl.delete.submit},$scope.jl.aofintObj={},$scope.jl.aofintObj.list={},$scope.jl.aofintObj.list.loading=!1,$scope.jl.aofintObj.list.data=[],$scope.jl.aofintObj.init=function(){$scope.jl.aofintObj.list.loading=!0,icdb.get("AreaOfInterest",function(result){$scope.jl.aofintObj.list.data=result,$timeout(function(){$scope.jl.aofintObj.list.loading=!1},10)})},$scope.jl.aofintObj.init(),$scope.jl.aofintObj.add={},$scope.jl.aofintObj.add.model={},$scope.jl.aofintObj.add.submit=function(){for(var i in $scope.jl.aofintObj.list.data)if($scope.jl.aofintObj.list.data[i].title.toLowerCase()===$scope.jl.aofintObj.add.model.title.toLowerCase()&&$scope.jl.aofintObj.list.data[i].department===$scope.jl.aofintObj.add.model.department)return void alertService.flash("error","Duplicate not allowed.");icdb.insert("AreaOfInterest",$scope.jl.aofintObj.add.model,function(response){$scope.jl.aofintObj.add.model={},$scope.jl.aofintObj.list.data.push(response.result),alertService.flash("success","Area Of Interest has been created successfully.")})},$scope.jl.aofintObj.edit={},$scope.jl.aofintObj.edit.model={},$scope.jl.aofintObj.edit.openModal=function(row){for(var i in $scope.jl.aofintObj.list.data)$scope.jl.aofintObj.list.data[i].isEdit=!1;row.isEdit=!0,$scope.jl.aofintObj.edit.model=angular.copy(row)},$scope.jl.aofintObj.edit.closeModal=function(row){row.isEdit=!1,$scope.jl.aofintObj.edit.model={}},$scope.jl.aofintObj.edit.submit=function(row){for(var i in $scope.jl.aofintObj.list.data)if($scope.jl.aofintObj.list.data[i]._id!=$scope.jl.aofintObj.edit.model._id&&$scope.jl.aofintObj.list.data[i].title.toLowerCase()===$scope.jl.aofintObj.edit.model.title.toLowerCase()&&$scope.jl.aofintObj.list.data[i].department===$scope.jl.aofintObj.edit.model.department)return void alertService.flash("error","Duplicate not allowed.");icdb.update("AreaOfInterest",$scope.jl.aofintObj.edit.model._id,{title:$scope.jl.aofintObj.edit.model.title,department:$scope.jl.aofintObj.edit.model.department},function(response){for(var i in row.isEdit=!1,$scope.jl.aofintObj.list.data)$scope.jl.aofintObj.list.data[i]._id==$scope.jl.aofintObj.edit.model._id&&($scope.jl.aofintObj.list.data[i].city=$scope.jl.aofintObj.edit.model.city);alertService.flash("success","Area Of Interest has been updated successfully.")})},$scope.jl.aofintObj.edit.activeQa=function(row,status){row.status=status,icdb.update("AreaOfInterest",row._id,row,function(response){status?alertService.flash("success","Area Of Interest has been Activated successfully."):alertService.flash("success","Area Of Interest has been Deactivated successfully.")})},$scope.jl.aofintObj.delete={},$scope.jl.aofintObj.delete.openModal=function(row){$("#common-delete-modal").modal("show"),$scope.jl.aofintObj.delete.submit=function(){icdb.remove("AreaOfInterest",row._id,function(response){for(var i in $scope.jl.aofintObj.list.data)$scope.jl.aofintObj.list.data[i]._id==row._id&&$scope.jl.aofintObj.list.data.splice(i,1);alertService.flash("success","Area Of Interest has been deleted successfully.")})},$rootScope.g.submitDelete=$scope.jl.aofintObj.delete.submit},$scope.tcObj={},$scope.tcObj.data=[],$scope.tcObj.loading=!1,$scope.tcObj.init=function(row){$scope.tcObj.loading=!0,icdb.get("TrackUniqueContact",function(result){$scope.tcObj.data=result,$timeout(function(){$scope.tcObj.loading=!1},10)})},$scope.tcObj.delete=function(row){$("#common-delete-modal").modal("show"),$scope.tcObj.submitDelete=function(){icdb.remove("TrackUniqueContact",row._id,function(response){for(var i in $scope.tcObj.data)$scope.tcObj.data[i]._id==row._id&&$scope.tcObj.data.splice(i,1);alertService.flash("success","Contact has been deleted successfully.")})},$rootScope.g.submitDelete=$scope.tcObj.submitDelete},$scope.tcObj.deleteMultiple=function(row){$("#common-delete-modal").modal("show"),$scope.tcObj.deleteMulti=function(){for(var i in $scope.tcObj.data)$scope.tcObj.data[i].isDelete&&icdb.remove("TrackUniqueContact",$scope.tcObj.data[i]._id,function(response){});alertService.flash("success","Contact has been deleted successfully.")},$rootScope.g.submitDelete=$scope.tcObj.deleteMulti}}]),appModule.controller("SiteMgmtController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.stMgmt={},$scope.stMgmt.siteObj={},$scope.stMgmt.siteObj.appsSettings={},$scope.stMgmt.siteObj.appsSettings.model={},$scope.stMgmt.siteObj.appsSettings.init=function(){icdb.get("AppConfig",function(result){$scope.stMgmt.siteObj.appsSettings.model=result[result.length-1]})},$scope.stMgmt.siteObj.appsSettings.submit=function(){$scope.stMgmt.siteObj.appsSettings.model._id?icdb.update("AppConfig",$scope.stMgmt.siteObj.appsSettings.model._id,$scope.stMgmt.siteObj.appsSettings.model,function(result){alertService.flash("success","AppConfig has been updated successfully.")}):icdb.insert("AppConfig",$scope.stMgmt.siteObj.appsSettings.model,function(result){alertService.flash("success","AppConfig has been created successfully.")})},$scope.stMgmt.siteObj.team={},$scope.stMgmt.siteObj.team.loading=!1,$scope.stMgmt.siteObj.team.data=[],$scope.stMgmt.siteObj.team.model={},$scope.stMgmt.siteObj.team.init=function(){$scope.stMgmt.siteObj.team.loading=!0,icdb.get("OurTeam",function(result){$scope.stMgmt.siteObj.team.data=result,$timeout(function(){$scope.stMgmt.siteObj.team.loading=!1},10)})},$scope.stMgmt.siteObj.team.init(),$scope.stMgmt.siteObj.team.openModal=function(row){$("#manage-team-membe").modal("show"),row&&row._id&&($scope.stMgmt.siteObj.team.model=angular.copy(row))},$scope.stMgmt.siteObj.team.closeModal=function(){$scope.stMgmt.siteObj.team.model={},$scope.stMgmt.siteObj.team.isSubmited=!1,$("#manage-team-membe").modal("hide")},$scope.stMgmt.siteObj.team.isSubmited=!1,$scope.stMgmt.siteObj.team.submit=function(form){form.$valid?($scope.stMgmt.siteObj.team.model._id||icdb.insert("OurTeam",$scope.stMgmt.siteObj.team.model,function(result){$scope.stMgmt.siteObj.team.data.push(result.result),$scope.stMgmt.siteObj.team.closeModal(),alertService.flash("success","Team Member has been created successfully.")}),$scope.stMgmt.siteObj.team.model._id&&icdb.update("OurTeam",$scope.stMgmt.siteObj.team.model._id,$scope.stMgmt.siteObj.team.model,function(result){for(var row in $scope.stMgmt.siteObj.team.data)$scope.stMgmt.siteObj.team.data[row]._id==$scope.stMgmt.siteObj.team.model._id&&($scope.stMgmt.siteObj.team.data[row]=angular.copy($scope.stMgmt.siteObj.team.model));$scope.stMgmt.siteObj.team.closeModal(),alertService.flash("success","Team Member has been updated successfully.")})):$scope.stMgmt.siteObj.team.isSubmited=!0},$scope.stMgmt.siteObj.team.delete={},$scope.stMgmt.siteObj.team.delete.openModal=function(dataRow){$("#common-delete-modal").modal("show"),$scope.stMgmt.siteObj.team.delete.submit=function(){icdb.remove("OurTeam",dataRow._id,function(result){for(var row in $scope.stMgmt.siteObj.team.data)$scope.stMgmt.siteObj.team.data[row]._id==dataRow._id&&$scope.stMgmt.siteObj.team.data.splice(row,1);alertService.flash("success","Team Member has been deleted successfully.")})},$rootScope.g.submitDelete=$scope.stMgmt.siteObj.team.delete.submit}}]),appModule.controller("JobMgmtController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.jobMgmtObj={},$scope.jobMgmtObj.list={},$scope.jobMgmtObj.list.loading=!1,$scope.jobMgmtObj.list.data=[],$scope.jobMgmtObj.list.init=function(){$scope.jobMgmtObj.list.loading=!0,$http.post("api/admin/get-job/all").success(function(response){$scope.jobMgmtObj.list.data=response.data,$timeout(function(){$scope.jobMgmtObj.list.loading=!1},10)})},$scope.jobMgmtObj.cdList={},$scope.jobMgmtObj.cdList.rowObj={},$scope.jobMgmtObj.cdList.data=[],$scope.jobMgmtObj.cdList.loading=!1,$scope.jobMgmtObj.cdList.init=function(jobRow){$scope.jobMgmtObj.cdList.loading=!0,$scope.jobMgmtObj.cdList.data=[],$scope.jobMgmtObj.cdList.rowObj=angular.copy(jobRow),$("#candidates-list").modal("show"),$http.post("api/admin/get-candidates/by-job",{jobId:jobRow._id}).success(function(response){for(var i in $scope.jobMgmtObj.cdList.data=response.data,$rootScope.globalvarObj.cites)for(var j in $scope.jobMgmtObj.cdList.data)$scope.jobMgmtObj.cdList.data[j].city==$rootScope.globalvarObj.cites[i]._id&&($scope.jobMgmtObj.cdList.data[j].cityName=$rootScope.globalvarObj.cites[i].city);$timeout(function(){$scope.jobMgmtObj.cdList.loading=!1},10)})},$scope.job={},$scope.job.create={},$scope.job.create.model={},$scope.job.create.openModal=function(dataRow){$scope.job.create.model=angular.copy(dataRow),$scope.job.create.model.interviewDateFrom=new Date(dataRow.interviewDateFrom),$scope.job.create.model.interviewDateTo=new Date(dataRow.interviewDateTo),$("#add-new-job").modal("show")},$scope.job.create.closeModal=function(){$scope.job.create.model={},$scope.job.create.isSubmited=!1,$scope.job.create.isReqSent=!1,$("#add-new-job").modal("hide")},$scope.job.create.isSubmited=!1,$scope.job.create.isReqSent=!1,$scope.job.create.submit=function(form){form.$valid?($scope.job.create.isReqSent=!0,icdb.update("JobsBazaar",$scope.job.create.model._id,$scope.job.create.model,function(result){$scope.job.create.closeModal(),alertService.flash("success","Job has been Updated successfully.")})):$scope.job.create.isSubmited=!0},$scope.jobMgmtObj.jobStatsus={},$scope.jobMgmtObj.jobStatsus.submit=function(row){icdb.update("JobsBazaar",row._id,{status:row.status},function(response){alertService.flash("success","Job status has been updates successfully.")})},$scope.jobMgmtObj.delete={},$scope.jobMgmtObj.delete.openModal=function(row){$("#common-delete-modal").modal("show"),$scope.jobMgmtObj.delete.submit=function(){icdb.remove("JobsBazaar",row._id,function(response){for(var i in $scope.jobMgmtObj.list.data)$scope.jobMgmtObj.list.data[i]._id==row._id&&$scope.jobMgmtObj.list.data.splice(i,1)})},$rootScope.g.submitDelete=$scope.jobMgmtObj.delete.submit},$scope.jobMgmtObj.clone={},$scope.jobMgmtObj.clone.create=function(cloneData){var postData=angular.copy(cloneData);delete postData._id,icdb.insert("JobsBazaar",postData,function(response){response.status&&($scope.jobMgmtObj.list.data.push(response.result),alertService.flash("success","Job has been clone successfully."))})}}]),appModule.controller("CandidateMgmtController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.candObj={};function manageDataRow(row){for(var i in $rootScope.globalvarObj.qualification)$rootScope.globalvarObj.qualification[i]._id==row.department&&(row.departmentName=$rootScope.globalvarObj.qualification[i].name);for(var i in $rootScope.globalvarObj.cites)$rootScope.globalvarObj.cites[i]._id==row.city&&(row.cityName=$rootScope.globalvarObj.cites[i].city);return row}$scope.candObj.list={},$scope.candObj.list.loading=!1,$scope.candObj.list.data=[],$scope.candObj.list.init=function(){$scope.candObj.list.loading=!0,icdb.get("CandidateRegister",function(response){if(response&&response.length)for(var row in response)response[row]=manageDataRow(response[row]);$scope.candObj.list.data=response,$timeout(function(){$scope.candObj.list.loading=!1},10)})},$scope.candObj.fltObj={},$scope.candObj.fltObj.list={},$scope.candObj.fltObj.list.data=[],$scope.candObj.fltObj.isLoading=!1,$scope.candObj.fltObj.model={},$scope.candObj.fltObj.submit=function(){$("#filter-candidates-list").modal("show"),$scope.candObj.fltObj.isLoading=!0,$http.post("/api/admin/filter-candidates",{filter:$scope.candObj.fltObj.model}).then(function(response){$scope.candObj.fltObj.list.data=response.data,$timeout(function(){$scope.candObj.fltObj.isLoading=!1},10)})},$scope.candObj.fltObj.reset=function(){$scope.candObj.fltObj.model={},$scope.candObj.fltObj.isLoading=!1,$scope.candObj.fltObj.list.data=[]},$scope.cdUser={},$scope.cdUser.create={},$scope.cdUser.create.model={},$scope.cdUser.create.openModal=function(dataRow){$scope.cdUser.create.model=angular.copy(dataRow),isNaN(new Date(dataRow.birthDate))?$scope.cdUser.create.model.birthDate=new Date:$scope.cdUser.create.model.birthDate=new Date(dataRow.birthDate),$("#candidate-register-modal").modal("show")},$scope.cdUser.create.closeModal=function(){$scope.cdUser.create.model={},$scope.cdUser.create.isSubmited=!1,$scope.cdUser.create.isReqSent=!1,$("#candidate-register-modal").modal("hide")},$scope.cdUser.create.isSubmited=!1,$scope.cdUser.create.isReqSent=!1,$scope.cdUser.create.submit=function(form){form.$valid?($scope.cdUser.create.isReqSent=!0,icdb.update("CandidateRegister",$scope.cdUser.create.model._id,$scope.cdUser.create.model,function(response){$scope.cdUser.create.closeModal(),alertService.flash("success","Job has been updates successfully.")})):$scope.cdUser.create.isSubmited=!0},$scope.candObj.delete={},$scope.candObj.delete.openModal=function(dataRow){$("#common-delete-modal").modal("show"),$scope.candObj.delete.submit=function(){icdb.remove("CandidateRegister",dataRow._id,function(result){for(var i in $scope.candObj.list.data)$scope.candObj.list.data[i]._id==dataRow._id&&$scope.candObj.list.data.splice(i,1);alertService.flash("success","Candidate has been deleted successfully")}),icdb.removeWithCondition("TrackUniqueContact",{contact:""+dataRow.mobile},function(result){})},$rootScope.g.submitDelete=$scope.candObj.delete.submit}}]),appModule.controller("companyUserMgmtController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.cpUserObj={},$scope.cpUserObj.list={},$scope.cpUserObj.list.loading=!1,$scope.cpUserObj.list.data=[],$scope.cpUserObj.list.init=function(){$scope.cpUserObj.list.loading=!0,icdb.get("OurClients",function(result){$scope.cpUserObj.list.data=result,$timeout(function(){$scope.cpUserObj.list.loading=!1},1e3)})},$scope.cpUserObj.downloadCSV=function(){$rootScope.g.downloadCSV("/api/v1/download/csv-data",{model:"OurClients",csvName:"Company Users"})},$scope.cpUserObj.list.delete={},$scope.cpUserObj.list.delete.openModal=function(dataRow){$("#common-delete-modal").modal("show"),$scope.cpUserObj.list.delete.submit=function(){icdb.remove("OurClients",dataRow._id,function(result){for(var i in $scope.cpUserObj.list.data)$scope.cpUserObj.list.data[i]._id==dataRow._id&&$scope.cpUserObj.list.data.splice(i,1);alertService.flash("Success","User has been deleted successfully")})},$rootScope.g.submitDelete=$scope.cpUserObj.list.delete.submit},$scope.cpUserObj.list.edit={},$scope.cpUserObj.list.edit.isSubmited=!1,$scope.cpUserObj.list.edit.isReqSent=!1,$scope.cpUserObj.list.edit.model={},$scope.cpUserObj.list.edit.openModal=function(dataRow){$scope.cpUserObj.list.edit.model=angular.copy(dataRow),$("#update-cp-user").modal("show"),$scope.cpUserObj.list.edit.submit=function(form){form.$valid?($scope.cpUserObj.list.edit.isReqSent=!0,icdb.update("OurClients",dataRow._id,$scope.cpUserObj.list.edit.model,function(result){alertService.flash("success","User has been successfully updated."),$scope.cpUserObj.list.edit.closeModal()})):$scope.cpUserObj.list.edit.isSubmited=!0}},$scope.cpUserObj.list.edit.closeModal=function(){$("#update-cp-user").modal("hide"),$scope.cpUserObj.list.edit.isSubmited=!1,$scope.cpUserObj.list.edit.isReqSent=!1,$scope.cpUserObj.list.edit.model={}}}]),appModule.controller("userInquiryMgmtController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","$timeout","$state","icdb","alertService",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,$timeout,$state,icdb,alertService){$scope.userInqObj={},$scope.userInqObj.list={},$scope.userInqObj.list.loading=!1,$scope.userInqObj.list.data=[],$scope.userInqObj.list.init=function(){$scope.userInqObj.list.loading=!0,icdb.get("Inquiry",function(result){$scope.userInqObj.list.data=result,$timeout(function(){$scope.userInqObj.list.loading=!1},1e3)})},$scope.userInqObj.list.delete={},$scope.userInqObj.list.delete.openModal=function(dataRow){$("#common-delete-modal").modal("show"),$scope.userInqObj.list.delete.submit=function(){icdb.remove("Inquiry",dataRow._id,function(result){for(var i in $scope.userInqObj.list.data)$scope.userInqObj.list.data[i]._id==dataRow._id&&$scope.userInqObj.list.data.splice(i,1);alertService.flash("Success","Inquiry has been deleted successfully")})},$rootScope.g.submitDelete=$scope.userInqObj.list.delete.submit},$scope.userInqObj.isRead={},$scope.userInqObj.isRead.submit=function(dataRow,status){var _status=!dataRow.isRead;icdb.update("Inquiry",dataRow._id,{isRead:_status},function(result){alertService.flash("Success","Done, Mark as read"),dataRow.isRead=_status})}}]),appModule.controller("AdvertisementController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","alertService","$timeout","icdb",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,alertService,$timeout,icdb){$scope.advObj={};$scope.advObj.list={},$scope.advObj.list.loading=!1,$scope.advObj.list.init=function(){$scope.advObj.list.loading=!0,icdb.get("advertisement",function(response){$scope.advObj.list.data=response,$timeout(function(){$scope.advObj.list.loading=!1},10)})},$scope.advObj.add={},$scope.advObj.add.openModal=function(data){data&&data._id&&($scope.advObj.add.model=angular.copy(data)),$("#create-ads-modal").modal("show")},$scope.advObj.add.closeModal=function(){$scope.advObj.add.model={},$("#create-ads-modal").modal("hide")},$scope.advObj.add.removeDzImag=function(){$scope.advObj.add.model.image=""},$scope.advObj.initdz=function(){$timeout(function(){angular.element("#adv-dropzone").html('<div class="dropzone" id="adv-dropzone-id"></div>'),angular.element("#adv-dropzone-id").dropzone({url:"/api/common/file/upload/2",maxFilesize:5,maxFiles:1,addRemoveLinks:!0,dictRemoveFile:"Remove",uploadMultiple:!1,init:function(){this.on("complete",function(file){0===this.getUploadingFiles().length&&this.getQueuedFiles().length})},accept:function(file,done){$scope.advObj.add.isUplaoding=!0;file.type;$timeout(function(){if(file.name){var fileT=file.name.split("."),IcExtension=fileT[fileT.length-1];if(-1==["jpg","jpeg","png"].indexOf(IcExtension.toLowerCase()))return $scope.advObj.add.isUplaoding=!1,$alert.flash("error","Selected file is invalid, Please choose valid file.",!0),!1;done()}},10)},success:function(data,resData){console.log(resData),resData&&($scope.advObj.add.model.image=resData.image),$timeout(function(){$scope.advObj.add.isUplaoding=!1},500)},removedfile:function(file,data){var _ref;if(file&&file.previewElement&&file.previewElement.parentNode)return null!=(_ref=file.previewElement)?_ref.parentNode.removeChild(file.previewElement):void 0}})},100)},$scope.advObj.add.upload=function(){var _job_dropzone=angular.element("#adv-dropzone-id");_job_dropzone&&_job_dropzone[0]&&_job_dropzone[0].dropzone&&_job_dropzone[0].dropzone.removeAllFiles(!0),angular.element("#adv-dropzone-id").click()},$scope.advObj.add.model={},$scope.advObj.add.isSubmited=!1,$scope.advObj.add.submit=function(form){form.$valid?($scope.advObj.add.model.expireOn=new Date($scope.advObj.add.model.expireOn).getTime(),$scope.advObj.add.model._id?icdb.update("advertisement",$scope.advObj.add.model._id,$scope.advObj.add.model,function(result){$scope.advObj.add.closeModal(),alertService.flash("success","Ads has been updated successfully.")}):icdb.insert("advertisement",$scope.advObj.add.model,function(result){result.status&&$scope.advObj.list.data.push(result.result),$scope.advObj.add.closeModal(),alertService.flash("success","Ads has been created successfully.")})):$scope.advObj.add.isSubmited=!0},$scope.advObj.delete={},$scope.advObj.add.delete=function(status,dataRow){status?icdb.remove("advertisement",dataRow._id,function(result){for(var i in $scope.advObj.list.data)$scope.advObj.list.data[i]._id==dataRow._id&&$scope.advObj.list.data.splice(i,1);alertService.flash("success","Ads has been deleted successfully.")}):dataRow.isDelete=!0}}]),appModule.controller("AccountController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","alertService","$timeout","icdb",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,alertService,$timeout,icdb){$scope.accObj={},$scope.accObj.empObj={},$scope.accObj.empObj.isloading=!1,$scope.accObj.empObj.data=[],$scope.accObj.empObj.init=function(){$scope.accObj.empObj.isloading=!0,icdb.get("ourEmployee",function(response){$scope.accObj.empObj.data=response,$timeout(function(){$scope.accObj.empObj.isloading=!1},10)})},$scope.accObj.empObj.add={},$scope.accObj.empObj.add.model={},$scope.accObj.empObj.add.isSubmited=!1,$scope.accObj.empObj.add.submit=function(form){form.$valid?($scope.accObj.empObj.add.isSubmited=!1,$scope.accObj.empObj.add.model.timestamp=(new Date).getTime(),icdb.insert("ourEmployee",$scope.accObj.empObj.add.model,function(response){response.result&&$scope.accObj.empObj.data.push(response.result),$scope.accObj.empObj.add.model={}})):$scope.accObj.empObj.add.isSubmited=!0},$scope.accObj.empObj.delete={},$scope.accObj.empObj.delete.submit=function(status,row,index){status?icdb.remove("ourEmployee",row._id,function(response){$scope.accObj.empObj.data.splice(index,1)}):row.isDelete=!0}}]),appModule.controller("AttendanceController",["$scope","$http","$location","$uibModal","$stateParams","$rootScope","alertService","$timeout","icdb",function($scope,$http,$location,$uibModal,$stateParams,$rootScope,alertService,$timeout,icdb){$scope.atdObj={},$scope.atdObj.list={},$scope.atdObj.list.loading=!1,$scope.atdObj.list.init=function(){$scope.atdObj.list.loading=!0,icdb.get("ourEmployee",function(response){$scope.atdObj.list.data=response,$timeout(function(){$scope.atdObj.list.loading=!1},10)})};var now=new Date;$scope.atdObj.cal={},$scope.atdObj.cal.model={},$scope.atdObj.cal.today=now.getDate(),$scope.atdObj.cal.data=function(year,month){var numDaysInMonth,daysInWeek,index,i,l,daysArray;for(numDaysInMonth=[31,28,31,30,31,30,31,31,30,31,30,31],daysInWeek=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],index={Sun:0,Mon:1,Tue:2,Wed:3,Thu:4,Fri:5,Sat:6}[new Date(year,month-1,1).toString().split(" ")[0]],daysArray=[],i=0,l=numDaysInMonth[month-1];i<l;i++)daysArray.push({day:i+1,dayname:daysInWeek[index++]}),7==index&&(index=0);return daysArray}(now.getFullYear(),now.getMonth()+1)}]),appModule.factory("IcMean",[function(){return{name:"ic-mean"}}]),appModule.factory("icdb",["$http",function($http){var dataFactory={insert:function(model,data,callback){data.model=model,$http.post("/api/common/add-data",data).success(function(result){callback(result)})},update:function(model,_id,data,callback){data.model=model,data._id=_id,$http.post("/api/common/edit-data",data).success(function(result){callback(result)})},remove:function(model,_id,callback){$http.post("/api/common/delete",{model:model,_id:_id}).success(function(result){callback(result)})},get:function(model,callback){$http.post("/api/common/get-data",{model:model}).success(function(result){callback(result)})},getCondition:function(model,condition,callback){$http.post("/api/common/get-condition",{model:model,condition:condition}).success(function(result){callback(result)})},getSingle:function(model,_id,callback){$http.post("/api/common/single-data",{model:model,_id:_id}).success(function(result){callback(result)})},removeWithCondition:function(model,data,callback){data.model=model,$http.post("/api/common/delete-condition",data).success(function(result){callback(result)})}};return dataFactory}]),appModule.factory("alertService",["toastr",function(toastr){var alertService={};return alertService.flash=function(type,msg,isRedirect){"success"!=type&&"error"!=type||function(msgType,msg){"success"==msgType?toastr.success(msgType,msg):toastr.error(msgType,msg)}(type,msg)},alertService}]);